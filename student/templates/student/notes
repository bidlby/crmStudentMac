onclick="location.href='{% url 'student:AddPayment' x.studentId %}'"

CREATE VIEW [customerPerformance]
AS
SELECT a.studentId ,
       a.customerName,
       d.countryList , 
       c.sourceChannel , 
       count(DISTINCT b.checkInSeq) as total_checkIn
         FROM student_customerInfo a ,
              student_checkInData b ,
              student_leadSource c,
              student_countryList d
where a.studentId = b.studentId
and a.leadsChannel_id  = c.id
and a.Nationality_id = d.id
group by a.studentId ,
       a.customerName,
       d.countryList , 
       c.sourceChannel 

SELECT a.studentId ,
       a.customerName,
       b.transactiondate,
       b.paymentamount,
       b.currency
         FROM student_customerInfo a ,
               student_payments b
where a.studentId = b.studentId_id


class Payments(models.Model):

   # Payment Choices
   payType = [
        ('Card', 'Card'),
        ('Cash', 'Cash')
        ]

   transactionId = models.AutoField(primary_key=True)
   StudentId = models.ForeignKey(customerInfo,max_length=20,on_delete=models.DO_NOTHING)
   Payment_Ref = models.CharField(max_length=200)
   transactionDate = models.DateField(default=datetime.now)
   paymenttype = models.CharField(max_length=50, choices = payType , default='Cash')
   paymentAmount = models.IntegerField()
   currency = models.CharField(max_length=20 , default='AED')
   GB1 = models.BooleanField(default=False)

   def __str__(self) -> str:
       return f"{self.transactionId} Trx ID, {self.StudentId} , {self.paymentAmount} , {self.transactionDate}"